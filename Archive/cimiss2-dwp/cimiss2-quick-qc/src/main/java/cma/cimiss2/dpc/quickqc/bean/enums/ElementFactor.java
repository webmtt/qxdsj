package cma.cimiss2.dpc.quickqc.bean.enums;

/**
 * ************************************
 * @EnumName: ElementRANGE
 * @Auther: dangjinhu
 * @Date: 2019/7/25 17:47
 * @Description: range检查固定值
 * @Copyright: All rights reserver.
 * ************************************
 */

public enum ElementFactor {

    P_ERROR(3.8, ""),
    P_DOUBT(3.0, ""),
    T_ERROR(3.8, ""),
    T_DOUBT(3.0, ""),
    TG_ERROR(3, ""),
    TG_DOUBT(2, ""),
    D0_ERROR(4.2, ""),
    D0_DOUBT(3.0, ""),
    D05_ERROR(4.2, ""),
    D05_DOUBT(3.0, ""),
    D10_ERROR(4.0, ""),
    D10_DOUBT(2.8, ""),
    D15_ERROR(4.0, ""),
    D15_DOUBT(2.8, ""),
    D20_ERROR(4.0, ""),
    D20_DOUBT(2.8, ""),
    D40_ERROR(4.0, ""),
    D40_DOUBT(2.8, ""),
    D80_ERROR(3, ""),
    D80_DOUBT(2, ""),
    D160_ERROR(3, ""),
    D160_DOUBT(2, ""),
    D320_ERROR(3, ""),
    D320_DOUBT(2, ""),
    U_ERROR(3.0, ""),
    U_DOUBT(2.0, ""),
    R_ERROR(200, ""),
    R_DOUBT(100, ""),
    FR_ERROR(3.6, ""),
    FR_DOUBT(1.8, ""),
    R03_ERROR(6.5, ""),
    R03_DOUBT(3.8, ""),
    R06_ERROR(9.0, ""),
    R06_DOUBT(5.0, ""),
    R12_ERROR(12.0, ""),
    R12_DOUBT(7.0, ""),
    R24_ERROR(18.0, ""),
    R24_DOUBT(10.0, ""),
    RMAN_DOUBT(0, ""),
    RMAN_ERROR(0, ""),
    FFF_ERROR(5.2, ""),
    FFF_DOUBT(3.2, ""),
    F02_F10_ERROR(4.0, ""),
    F02_F10_DOUBT(2.4, ""),
    FMAX_ERROR(4.2, ""),
    FMAX_DOUBT(2.5, ""),
    E_ERROR(0, ""),
    E_DOUBT(0, ""),
    L_ERROR(0, ""),
    L_DOUBT(0, ""),
    V_ERROR(0, ""),
    V_DOUBT(0, ""),
    NN_ERROR(0, ""),
    NN_DOUBT(0, ""),
    CLOUDERROR_ERROR(0, ""),
    CLOUDERROR_DOUBT(0, ""),
    SNOWDEPTH_ERROR(0, ""),
    SNOWDEPTH_DOUBT(0, ""),
    SNOWPRESSURE_ERROR(0, ""),
    SNOWPRESSURE_DOUBT(0, ""),
    SOILDEPTH_ERROR(0, ""),
    SOILDEPTH_DOUBT(0, ""),
    WIREICEINGDIA_ERROR(0, ""),
//    WIREICEINGDIA_DOUBT(0, ""),
    WIREICEINGDIA_DOUBT(0, ""),
    HAILDIA_ERROR(0, ""),
    HAILDIA_DOUBT(0, ""),
    DAY_R_ERROR(0, ""),
    DAY_R_DOUBT(0, ""),
    WIREICINGWEIGHT_ERROR(0, ""),
    WIREICINGWEIGHT_DOUBT(0, ""),
    WIREICINGT_ERROR(0, ""),
    WIREICINGT_DOUBT(0, ""),
    WIREICINGDDD_ERROR(0, ""),
    WIREICINGDDD_DOUBT(0, ""),
    WIREICINGFFF_ERROR(0, ""),
    WIREICINGFFF_DOUBT(0, ""),
    SS_ERROR(0, ""),
    SS_DOUBT(0, ""),
    TRE_ERROR(0, ""),
    TRE_DOUBT(0, ""),
    NRE_ERROR(0, ""),
    NRE_DOUBT(0, ""),
    DRE_ERROR(0, ""),
    DRE_DOUBT(-0, ""),
    SRE_ERROR(400, ""),
    SRE_DOUBT(-0, ""),
    RRE_ERROR(400, ""),
    RRE_DOUBT(-0, ""),
    URE_ERROR(36, ""),
    URE_DOUBT(-0, ""),
    TRI_ERROR(2100, ""),
    TRI_DOUBT(0, ""),
    NRI_ERROR(1500, ""),
    NRI_DOUBT(-400, ""),
    DRI_ERROR(1450, ""),
    DRI_DOUBT(0, ""),
    SRI_ERROR(1300, ""),
    SRI_DOUBT(0, ""),
    RRI_ERROR(1100, ""),
    RRI_DOUBT(0, ""),
    URI_ERROR(100, ""),
    URI_DOUBT(0, ""),
    AT_ERROR(1000, ""),
    AT_DOUBT(0, ""),
    AR_R_DOUBT(0, ""),
    AR_R_ERROR(12000, ""),
    AR_T_DOUBT(0, ""),
    AR_T_ERROR(500, ""),
    AR_PH_DOUBT(0, ""),
    AR_PH_ERROR(1400, ""),
    AR_K_DOUBT(0, ""),
    AR_K_ERROR(20000, ""),
    SEN_IDE_DOUBT(0, ""),
    SEN_IDE_ERROR(7, ""),
    P_CHA_DOUBT(0, ""),
    P_CHA_ERROR(14, ""),
    HPA_HEIGH_DOUBT(0, ""),
    HPA_HEIGH_ERROR(9999, ""),
    FIRST_STA_DOUBT(0, ""),
    FIRST_STA_ERROR(62, ""),
    FIRST_STA_MAX_DOUBT(2, ""),
    FIRST_STA_MAX_ERROR(2, ""),
    FIRST_STA_MIN_DOUBT(3, ""),
    FIRST_STA_MIN_ERROR(3, ""),
    FIRST_STA_MEAN_DOUBT(4, ""),
    FIRST_STA_MEAN_ERROR(4, ""),
    FIRST_STA_STA_DOUBT(10, ""),
    FIRST_STA_STA_ERROR(10, ""),
    HG_SEN_DOUBT(0, ""),
    HG_SEN_ERROR(9999, ""),
    HW_SEN_DOUBT(0, ""),
    HW_SEN_ERROR(9999, ""),
    METHOD_R_DOUBT(0, ""),
    METHOD_R_ERROR(14, ""),
    DEV_TYPE_L_DOUBT(0, ""),
    DEV_TYPE_L_ERROR(9999, ""),
    L_WL_DOUBT(0, ""),
    L_WL_ERROR(9999, ""),
    TIME_MEAN_DOUBT(0, ""),
    TIME_MEAN_ERROR(30, ""),
    RT_DOUBT(-600, ""),
    RT_ERROR(800, ""),
    V_BACK_ATR_DOUBT(0, ""),
    V_BACK_ATR_ERROR(2, ""),
    VER_MEAN_DOUBT(0, ""),
    VER_MEAN_ERROR(63, ""),
    CLOUD_SYSTEM_DOUBT(0, ""),
    CLOUD_SYSTEM_ERROR(14, ""),
    CLOUD_CLASS_DOUBT(0, ""),
    CLOUD_CLASS_ERROR(63, ""),
    DEC_METHOD_GROUDSTATE_DOUBT(0, ""),
    DEC_METHOD_GROUDSTATE_ERROR(14, ""),
    GROUDSTATE_DOUBT(0, ""),
    GROUDSTATE_ERROR(19, ""),
    DEC_METHOD_SNOWDEPTH_DOUBT(0, ""),
    DEC_METHOD_SNOWDEPTH_ERROR(14, ""),
    ROAD_STATE_DOUBT(0, ""),
    ROAD_STATE_ERROR(19, ""),
    DEPTH_SNOW_DOUBT(0, ""),
    DEPTH_SNOW_ERROR(9999, ""),
    DEPTH_WATER_DOUBT(0, ""),
    DEPTH_WATER_ERROR(9999, ""),
    DEPTH_ICE_DOUBT(0, ""),
    DEPTH_ICE_ERROR(9999, ""),
    T_ICEPOINT_DOUBT(-600, ""),
    T_ICEPOINT_ERROR(800, ""),
    SNOWMELT_CON_DOUBT(0, ""),
    SNOWMELT_CON_ERROR(9999, ""),
    PHE_DEC_SYSTEM_DOUBT(0, ""),
    PHE_DEC_SYSTEM_ERROR(14, ""),
    PHENOMENACODE_DOUBT(0, ""),
    PHENOMENACODE_ERROR(90, ""),
    TORNADO_DISTANCE_DOUBT(0, ""),
    TORNADO_DISTANCE_ERROR(9999, ""),
    TORNADO_POSITION_DOUBT(0, ""),
    TORNADO_POSITION_ERROR(360, ""),
    PASTWEATHER_DOUBT(0, ""),
    PASTWEATHER_ERROR(8, ""),
    YEAR_DOUBT(1, ""),
    YEAR_ERROR(2100, ""),
    MONTH_DOUBT(1, ""),
    MONTH_ERROR(12, ""),
    DAY_DOUBT(1, ""),
    DAY_ERROR(31, ""),
    TIME_ADD_DOUBT(-9999, ""),
    TIME_ADD_ERROR(0, ""),
    SHORT_TIME_ADD_DOUBT(0, ""),
    SHORT_TIME_ADD_ERROR(9999, ""),

    EUVA_DOUBT(0, ""),
    EUVA_ERROR(9999, ""),
    EUVB_DOUBT(0, ""),
    EUVB_ERROR(9999, ""),
    EALR_DOUBT(0, ""),
    EALR_ERROR(9999, ""),
    ESLR_DOUBT(0, ""),
    ESLR_ERROR(9999, ""),
    EPAR_DOUBT(0, ""),
    EPAR_ERROR(9999, ""),
    ESI_DOUBT(0, ""),
    ESI_ERROR(9999, ""),
    HUVA_DOUBT(0, ""),
    HUVA_ERROR(9999, ""),
    HUVB_DOUBT(0, ""),
    HUVB_ERROR(9999, ""),
    HALR_DOUBT(0, ""),
    HALR_ERROR(9999, ""),
    HSLR_DOUBT(0, ""),
    HSLR_ERROR(9999, ""),
    HPAR_DOUBT(0, ""),
    HPAR_ERROR(9999, ""),
    LEVEL_CON_DOUBT(0, ""),
    LEVEL_CON_ERROR(6, ""),
    LEVEL_STA_DOUBT(0, ""),
    LEVEL_STA_ERROR(14, ""),
    RADI_METER_F_DOUBT(0, ""),
    RADI_METER_F_ERROR(9999, ""),
    RADI_METER_T_DOUBT(0, ""),
    RADI_METER_T_ERROR(9999, ""),
    R_TOTAL_DOUBT(0, ""),
    R_TOTAL_ERROR(9999, ""),
    DES_MEANING_DOUBT(0, ""),
    DES_MEANING_ERROR(63, "");

    private double value;
    private String description;

    ElementFactor(double value, String description) {
        this.value = value;
        this.description = description;
    }

    public double getValue() {
        return value;
    }

    public String getDescription() {
        return description;
    }


}
