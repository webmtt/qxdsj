<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.piesat.kettlescheduler.dao.KmKettleLogDao">
  <resultMap id="BaseResultMap" type="com.piesat.kettlescheduler.model.KmKettleLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="job_record_id" jdbcType="INTEGER" property="jobRecordId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="count" jdbcType="BIGINT" property="count" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.piesat.kettlescheduler.model.KmKettleLog">
    <result column="batch_id" jdbcType="LONGVARCHAR" property="batchId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_id, job_record_id, category_id, `type`, `count`, `date`, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    batch_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from km_kettle_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from km_kettle_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.piesat.kettlescheduler.model.KmKettleLog">
    insert into km_kettle_log (id, job_id, job_record_id, 
      category_id, `type`, `count`, 
      `date`, create_time, update_time, 
      batch_id)
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{jobRecordId,jdbcType=INTEGER}, 
      #{categoryId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{count,jdbcType=BIGINT}, 
      #{date,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{batchId,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.piesat.kettlescheduler.model.KmKettleLog">
    insert into km_kettle_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="jobRecordId != null">
        job_record_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobRecordId != null">
        #{jobRecordId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.piesat.kettlescheduler.model.KmKettleLog">
    update km_kettle_log
    <set>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobRecordId != null">
        job_record_id = #{jobRecordId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.piesat.kettlescheduler.model.KmKettleLog">
    update km_kettle_log
    set job_id = #{jobId,jdbcType=INTEGER},
      job_record_id = #{jobRecordId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      `count` = #{count,jdbcType=BIGINT},
      `date` = #{date,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      batch_id = #{batchId,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.piesat.kettlescheduler.model.KmKettleLog">
    update km_kettle_log
    set job_id = #{jobId,jdbcType=INTEGER},
      job_record_id = #{jobRecordId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      `count` = #{count,jdbcType=BIGINT},
      `date` = #{date,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>